{"name": "Cleanup keeps only the latest post after exceeding limit", "status": "failed", "statusDetails": {"message": "AssertionError: assert 422 == 200\n +  where 422 = <Response [422]>.status_code", "trace": "@allure.feature(\"Posts Cleanup\")\n    @allure.title(\"Cleanup keeps only the latest post after exceeding limit\")\n    def test_cleanup_after_20_posts():\n        with step_request(\"GET /posts-db/ — get current posts\"):\n            r = requests.get(f\"{BASE_URL}/posts-db/\", timeout=5)\n            attach_response(r)\n            existing = r.json()\n            count = len(existing)\n    \n        with step_validate_body():\n            assert count <= 21, f\"Слишком много записей в базе: {count}. Очистка не работает.\"\n    \n        if count < 20:\n            to_create = 20 - count\n            for i in range(to_create):\n                requests.post(f\"{BASE_URL}/posts-db/\", params={\"title\": f\"Filler {i}\", \"content\": \"...\"}, timeout=5)\n    \n        with step_request(\"POST 21-й пост → триггер очистку\"):\n            r = requests.post(f\"{BASE_URL}/posts-db/\", params={\"title\": \"Survivor\", \"content\": \"Will remain\"}, timeout=5)\n            attach_response(r)\n>           assert r.status_code == 200\nE           assert 422 == 200\nE            +  where 422 = <Response [422]>.status_code\n\ntests\\test_post_cleanup_db.py:27: AssertionError"}, "steps": [{"name": "Send request: GET /posts-db/ — get current posts", "status": "passed", "attachments": [{"name": "Status Code", "source": "d0af1dfd-6868-4410-9700-fb1ea3265efb-attachment.txt", "type": "text/plain"}, {"name": "Response Body", "source": "c04320b2-4e89-4016-80b0-c5453038985b-attachment.json", "type": "application/json"}], "start": 1753783928539, "stop": 1753783930594}, {"name": "Validate response body content", "status": "passed", "start": 1753783930594, "stop": 1753783930594}, {"name": "Send request: POST 21-й пост → триггер очистку", "status": "failed", "statusDetails": {"message": "AssertionError: assert 422 == 200\n +  where 422 = <Response [422]>.status_code\n", "trace": "  File \"C:\\Users\\kmish\\Desktop\\projects\\fullstack_pet_project\\tests\\test_post_cleanup_db.py\", line 27, in test_cleanup_after_20_posts\n    assert r.status_code == 200\n"}, "attachments": [{"name": "Status Code", "source": "cb66d339-14f0-4375-a7b7-f69cc32dc916-attachment.txt", "type": "text/plain"}, {"name": "Response Body", "source": "42810c9d-aaed-400e-99f2-6126432fec2b-attachment.json", "type": "application/json"}], "start": 1753783969327, "stop": 1753783971365}], "start": 1753783928539, "stop": 1753783971375, "uuid": "d9bdc90d-7103-4fdf-bef4-dff9ccb54d1b", "historyId": "8012c354e7dda521bc04d7853c3a1297", "testCaseId": "8012c354e7dda521bc04d7853c3a1297", "fullName": "tests.test_post_cleanup_db#test_cleanup_after_20_posts", "labels": [{"name": "feature", "value": "Posts Cleanup"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_post_cleanup_db"}, {"name": "host", "value": "LAPTOP-IKM1QBQF"}, {"name": "thread", "value": "7920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_post_cleanup_db"}], "titlePath": ["tests", "test_post_cleanup_db.py"]}